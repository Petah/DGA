/*
 * PAlgorithm.java
 *
 * Created on 22 March 2009, 23:13
 */
package dataanalyzer.gui;

import dataanalyzer.entity.Algorithm;
import dataanalyzer.entity.AlgorithmProcess;
import dataanalyzer.entity.Setting;
import dataanalyzer.listeners.CompletionListener;
import dataanalyzer.manager.GUIManager;
import java.awt.FlowLayout;
// TODO: Add settings for default display output/progress
// FIXME: Dispose and preload buttons need better functionality
// TODO: Finish documenting.
/**
 *
 * @author  Petah
 */
public class PAlgorithm extends javax.swing.JPanel {

    private Algorithm algorithm;
    private GUIManager gui;
    private IAlgorithmPanel algorithmPanel;

    /**
     * Creates and initializes the panel. Loads the checkbox state from settings.
     * @param gui the main GUI and system referance
     * @param algorithm the algorithm to get the GUI from
     */
    public PAlgorithm(GUIManager gui, Algorithm algorithm) {
        this.gui = gui;
        this.algorithm = algorithm;
        initComponents();
        panel.setLayout(new FlowLayout());
        try {
            panel.add(algorithmPanel = algorithm.getGUI());
            algorithmPanel.setSystem(gui.system.userInterface);
        } catch (NullPointerException ex) {
            gui.system.userInterface.handleError("No GUI included with algorithm.");
        }
        //Checkbox settings
        Setting<Boolean> progress = gui.system.settingsManager.find("showProgress");
        if (progress != null) {
            cbProgress.setSelected(progress.value);
        }
        Setting<Boolean> output = gui.system.settingsManager.find("showOutput");
        if (output != null) {
            cbOutput.setSelected(output.value);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bRun = new javax.swing.JButton();
        bDispose = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        bPreload = new javax.swing.JButton();
        cbProgress = new javax.swing.JCheckBox();
        cbOutput = new javax.swing.JCheckBox();
        tfOutputName = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();

        bRun.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/appointment-new.png"))); // NOI18N
        bRun.setText("Run");
        bRun.setToolTipText("Run algorithm");
        bRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRunActionPerformed(evt);
            }
        });

        bDispose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/user-trash-full.png"))); // NOI18N
        bDispose.setText("Dispose");
        bDispose.setEnabled(false);
        bDispose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDisposeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 485, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 234, Short.MAX_VALUE)
        );

        bPreload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/view-refresh.png"))); // NOI18N
        bPreload.setText("Preload");
        bPreload.setToolTipText("Preload input");
        bPreload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPreloadActionPerformed(evt);
            }
        });

        cbProgress.setText("Show progress");
        cbProgress.setToolTipText("Automaticly show progress when algorithm is running");
        cbProgress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbProgressActionPerformed(evt);
            }
        });

        cbOutput.setText("Show output");
        cbOutput.setToolTipText("Automaticly show output once algorithm completes");
        cbOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOutputActionPerformed(evt);
            }
        });

        tfOutputName.setToolTipText("Set output name");

        jLabel1.setText("Output name:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bRun)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDispose)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bPreload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbProgress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbOutput))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(tfOutputName)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bRun)
                    .addComponent(bDispose)
                    .addComponent(bPreload)
                    .addComponent(cbProgress)
                    .addComponent(cbOutput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfOutputName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

private void bRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRunActionPerformed

    //Collect input if the algorithm supplied a GUI
    try {
        //Catch and void any errors if there is no panel supplied with the algorithm
        algorithmPanel.collectInput();
    } catch (NullPointerException ex) {
    }
    AlgorithmProcess process = algorithm.createProcess();
    //Set the output name if applicable
    if (tfOutputName.getText().length() > 0) {
        process.setOutputName(tfOutputName.getText());
    }
    //Setup listeners
    process.createListeners();
    if (cbProgress.isSelected()) {
        //Display the progress frame if applicable
        PProgress progressPanel = new PProgress(gui, process);
        //Update prgress information
        process.addProgressListener(progressPanel);
        process.addCompletionListener(progressPanel);
        //Add to main frame
        gui.fmain.addIFrame(algorithm.getName() + " progress", progressPanel, -1, -1);
    }
    if (cbOutput.isSelected()) {
        //Show output frame when complete
        process.addCompletionListener(new CompletionListener() {

            public void complete(Object o) {
                gui.fmain.addOutputFrame(((AlgorithmProcess) o).getOutput());
            }
        });
    }
    //Run the algorithm
    gui.system.processManager.run(process);
}//GEN-LAST:event_bRunActionPerformed

private void bPreloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPreloadActionPerformed
    //Collect input if the algorithm supplied a GUI
    try {
        algorithmPanel.collectInput();
    } catch (NullPointerException ex) {
    }
}//GEN-LAST:event_bPreloadActionPerformed

private void cbProgressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbProgressActionPerformed
    gui.system.settingsManager.add(new Setting<Boolean>("showProgress", cbProgress.isSelected(), "Boolean"));
}//GEN-LAST:event_cbProgressActionPerformed

private void cbOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOutputActionPerformed
    gui.system.settingsManager.add(new Setting<Boolean>("showOutput", cbOutput.isSelected(), "Boolean"));
}//GEN-LAST:event_cbOutputActionPerformed

private void bDisposeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDisposeActionPerformed
    // TODO add dispose code here
}//GEN-LAST:event_bDisposeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bDispose;
    private javax.swing.JButton bPreload;
    private javax.swing.JButton bRun;
    private javax.swing.JCheckBox cbOutput;
    private javax.swing.JCheckBox cbProgress;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField tfOutputName;
    // End of variables declaration//GEN-END:variables
}
