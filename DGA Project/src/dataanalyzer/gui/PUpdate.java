/*
 * PUpdate.java
 *
 * Created on 16 April 2009, 13:17
 */
package dataanalyzer.gui;

// TODO: Finish automatic update 
// TODO: Add version numbering
// TODO: Add algorithm download capibility
import dataanalyzer.entity.Algorithm;
import dataanalyzer.entity.Update;
import dataanalyzer.listeners.CompletionListener;
import dataanalyzer.listeners.ManagerUpdateListener;
import dataanalyzer.manager.GUIManager;
import dataanalyzer.manager.Manager;
import dataanalyzer.util.Format;
import dataanalyzer.util.Version;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.lang.reflect.InvocationTargetException;
import javax.swing.AbstractListModel;
import javax.swing.JTable;
import javax.swing.SwingUtilities;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

/**
 *
 * @author  Petah
 */
// TODO: Add tool to update current files with downloaded file and restart application
public class PUpdate extends javax.swing.JPanel implements CompletionListener, ManagerUpdateListener {

    private GUIManager gui;

    /** Creates new form PUpdate */
    public PUpdate(GUIManager gui) {
        this.gui = gui;
        gui.system.updateManager.addUpdateListener(this);
        initComponents();


        // Disable auto resizing
        tUpdates.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        tfCurrentVersion.setText(Version.getVersion());

        setupTable();
    }

    public void setupTable() {
        // TODO: Add the sizes as settings
        // Set the first visible column to 100 pixels wide
        TableColumn col = tUpdates.getColumnModel().getColumn(0);
        col.setPreferredWidth(250);
        col = tUpdates.getColumnModel().getColumn(1);
        col.setPreferredWidth(100);
        col = tUpdates.getColumnModel().getColumn(2);
        col.setPreferredWidth(250);

        tUpdates.addMouseListener(new MouseAdapter() {

            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    Update update = gui.system.updateManager.get(tUpdates.getSelectedRow());
                    gui.system.updateManager.downloadUpdate(update);
                }
            }
        });
    }

    private class UpdateTableModel extends AbstractTableModel {

        @Override
        public String getColumnName(int column) {
            switch (column) {
                case 0:
                    return "File name";
                case 1:
                    return "Size";
                case 2:
                    return "MD5";
            }
            return null;
        }

        public int getColumnCount() {
            //File, Size, MD5
            return 3;
        }

        public int getRowCount() {
            return gui.system.updateManager.size();
        }

        public Object getValueAt(int rowIndex, int columnIndex) {
            Update update = gui.system.updateManager.get(rowIndex);
            switch (columnIndex) {
                case 0:
                    return new File(update.name).getName();
                case 1:
                    return Format.bytes(update.size);
                case 2:
                    return update.md5;
            }
            return null;
        }
    }

    private class FileListModel extends AbstractListModel {

        public Object getElementAt(int index) {
            return gui.system.updateManager.get(index);
        }

        public int getSize() {
            return gui.system.updateManager.size();
        }
    }

    public void update(Manager m) {
        //Create a thread to execute invokeAndWait in order to not cause errors when updating the list UI
        new Thread() {

            @Override
            public void run() {
                try {
                    SwingUtilities.invokeAndWait(new Runnable() {

                        public void run() {
                            tUpdates.updateUI();
                            tfLatestVersion.setText(gui.system.updateManager.getVersion());
                        }
                    });
                } catch (InterruptedException ex) {
                    gui.system.userInterface.handleException(ex);
                } catch (InvocationTargetException ex) {
                    gui.system.userInterface.handleException(ex);
                }
            }
        }.start();
    }

    public void complete(Object o) {
        bCheck.setEnabled(true);
        bUpdate.setEnabled(true);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bCheck = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfCurrentVersion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tfLatestVersion = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        bUpdate = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tUpdates = new javax.swing.JTable();

        bCheck.setText("Check for updates");
        bCheck.setToolTipText("Check server for updates");
        bCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCheckActionPerformed(evt);
            }
        });

        jLabel1.setText("Current version:");

        tfCurrentVersion.setEditable(false);

        jLabel2.setText("Latest version:");

        tfLatestVersion.setEditable(false);

        jLabel3.setText("Affected files:");

        bUpdate.setText("Update");
        bUpdate.setEnabled(false);
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        tUpdates.setModel(new PUpdate.UpdateTableModel());
        jScrollPane2.setViewportView(tUpdates);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 381, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bCheck)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bUpdate))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(tfLatestVersion, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)
                            .addComponent(tfCurrentVersion, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 298, Short.MAX_VALUE)))
                    .addComponent(jLabel3))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(tfCurrentVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfLatestVersion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bCheck)
                    .addComponent(bUpdate))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void bCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCheckActionPerformed
    bCheck.setEnabled(false);
    gui.system.updateManager.check(this);
}//GEN-LAST:event_bCheckActionPerformed

private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
    // TODO: Add progress indicator when downloading
    gui.system.updateManager.downloadAllUpdates();
    gui.system.update();
}//GEN-LAST:event_bUpdateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bCheck;
    private javax.swing.JButton bUpdate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tUpdates;
    private javax.swing.JTextField tfCurrentVersion;
    private javax.swing.JTextField tfLatestVersion;
    // End of variables declaration//GEN-END:variables
}
